#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.cluster import KMeans
import os
import matplotlib.pyplot as plt
import warnings


# In[2]:


warnings.filterwarnings("ignore",category=UserWarning)
os.environ['OMP_NUM_THREADS'] = '1'


# In[9]:


data = pd.read_csv('csv/Mall_Customers.csv')
data.columns = data.columns.str.strip()
data.head()


# In[10]:


if 'Gender' in data.columns:
    le = LabelEncoder()
    data['Gender'] = le.fit_transform(data['Gender'])
elif 'gender' in data.columns:
    le = LabelEncoder()
    data['gender'] = le.fit_transform(data['gender'])


# In[11]:


features = data[['Annual Income (k$)','Spending Score (1-100)']].copy()

inertia = []
for k in range(1,11):
    kmeans = KMeans(n_clusters=k, n_init=10, random_state=42)
    kmeans.fit(features)
    inertia.append(kmeans.inertia_)


# In[12]:


plt.plot(range(1,11),inertia)
plt.xlabel('Number of clusters')
plt.ylabel('Inertia')
plt.title('Elbow method')
plt.show()


# In[17]:


optimal_k = 5
kmeans = KMeans(n_clusters=optimal_k, n_init=10, random_state=42)
clusters = kmeans.fit_predict(features)
features['Cluster'] = clusters
centroids = kmeans.cluster_centers_


# In[21]:


plt.figure(figsize=(10,6))
plt.scatter(features['Annual Income (k$)'],
            features['Spending Score (1-100)'],
            c=features['Cluster'],
            cmap='viridis',
            label='Data Points')
plt.scatter(centroids[:, 0], centroids[:, 1], s=300, c='green', label='Centroids',marker='o')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.title('K-Means clustering with centroids')
plt.legend()
plt.show()


# In[ ]:





# In[ ]:




