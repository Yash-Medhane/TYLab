#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd 
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score


# In[2]:


data = pd.read_csv('csv/temp.csv')


# In[3]:


data


# In[4]:


x =  data[['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']]
y = data['ANNUAL']


# In[10]:


X_train,X_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)

model = LinearRegression()
model.fit(X_train,y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test,y_pred)
mae = mean_absolute_error(y_test,y_pred)
r2 = r2_score(y_test,y_pred)

print(f'Mean Squared Error (MSE):{mse:.2f}')
print(f'Mean Absolute Error (MAE):{mae:.2f}')
print(f'R-Squared (R2):{r2:.2f}')


# In[12]:


plt.figure(figsize = (10,6))
plt.scatter(y_test,y_pred, color='green',alpha=0.5)
plt.plot([y.min(),y.max()],[y.min(),y.max()],'--r',linewidth=3)
plt.title('Actual vs Predicted Annual Temperatures')
plt.xlabel('Actual Annual Temperature (0C)')
plt.ylabel('Predicted Annual Temperature (0c)')
plt.grid()
plt.show()


# In[ ]:




