#include<iostream>
#include<algorithm>
using namespace std;

int binarySearch(int arr[],int n,int target){
    int l=0,r=n-1;

    while(l<=r){
        int mid = l+(r-l)/2;

        if(arr[mid]==target){
            return mid;
        }
        else if(arr[mid]>target){
            r=mid-1;
        }
        else{
            l=mid+1;
        }
    }
    return -1;
}

int main(){

    int n;
    cout<<"enter the size of array :";
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++){
        cout<<"index "<<i<<" : ";
        cin>>arr[i];
}
    int target = 0;
    cout<<"element to be found : ";
    cin>>target;
    sort(arr,arr+n);
    int result = binarySearch(arr,n,target);
    if(result == -1) cout<<"element not found"<<endl;
    else cout<<"element found"<<endl;
return 0;
}


#include<iostream>
#include<algorithm>
using namespace std;

int binarySearchRec(int arr[],int target,int l,int r){

   if(l>r){
    return -1;
   }
        int mid = l+(r-l)/2;

        if(arr[mid]==target){
            return mid;
        }
        else if(arr[mid]>target){
            binarySearchRec(arr,target,l,mid-1);
        }
        else{
           binarySearchRec(arr,target,mid+1,r);
        }
}

int main(){

    int n;
    cout<<"enter the size of array :";
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++){
        cout<<"index "<<i<<" : ";
        cin>>arr[i];
}
    int target = 0;
    cout<<"element to be found : ";
    cin>>target;
    sort(arr,arr+n);
    int result = binarySearchRec(arr,target,0,n-1);
    if(result == -1) cout<<"element not found"<<endl;
    else cout<<"element found"<<endl;
return 0;
}



